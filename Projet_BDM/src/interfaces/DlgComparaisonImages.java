/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.Graphics;
import java.awt.Image;
import javax.swing.JSlider;
import javax.swing.JTextField;

/**
 *
 * @author ag092850
 */
public class DlgComparaisonImages extends javax.swing.JFrame {
    private int idPr;
    private Image imagePreuve;
    private Image imagePersonne;
    /**
     * Creates new form DlgComparaisonImages
     */
    public DlgComparaisonImages(int idPr, Image imagePreuve) {
        initComponents();
        this.idPr = idPr;
        this.imagePreuve = imagePreuve;
    }

    private void afficheImagePreuve()
    {
        Graphics g = this.ImagePreuve.getGraphics();
        g.drawImage(this.imagePreuve, 0, 0, this.ImagePreuve.getWidth(), this.ImagePreuve.getHeight(), this);
    }
    
    private void afficheImagePersonne()
    {
        Graphics g = this.ImagePersonne.getGraphics();
        g.drawImage(this.imagePersonne, 0, 0, this.ImagePersonne.getWidth(), this.ImagePersonne.getHeight(), this);
    }
    
    public void paint(Graphics g)
    {
        super.paint(g);
        if(this.imagePreuve!=null)
            this.afficheImagePreuve();
        if(this.imagePersonne!=null)
            this.afficheImagePersonne();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ImagePreuve = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PondAvgColorS = new javax.swing.JSlider();
        PondAvgColorJTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PondColorHistoS = new javax.swing.JSlider();
        PondColorHistoJTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        PondPosColorS = new javax.swing.JSlider();
        PondPosColorJTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        PondTextureS = new javax.swing.JSlider();
        PondTextureJTF = new javax.swing.JTextField();
        ImagePersonne = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1866, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setLayout(new java.awt.GridLayout(1, 3));

        javax.swing.GroupLayout ImagePreuveLayout = new javax.swing.GroupLayout(ImagePreuve);
        ImagePreuve.setLayout(ImagePreuveLayout);
        ImagePreuveLayout.setHorizontalGroup(
            ImagePreuveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 622, Short.MAX_VALUE)
        );
        ImagePreuveLayout.setVerticalGroup(
            ImagePreuveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
        );

        jPanel2.add(ImagePreuve);

        jPanel4.setLayout(new java.awt.GridLayout(8, 2));

        jLabel1.setText("Pondération de la couleur moyenne :");
        jPanel4.add(jLabel1);
        jPanel4.add(jLabel2);

        PondAvgColorS.setValue(100);
        PondAvgColorS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PondAvgColorSStateChanged(evt);
            }
        });
        jPanel4.add(PondAvgColorS);

        PondAvgColorJTF.setText("1.0");
        PondAvgColorJTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PondAvgColorJTFKeyReleased(evt);
            }
        });
        jPanel4.add(PondAvgColorJTF);

        jLabel3.setText("Pondération de l'histogramme de couleurs :");
        jPanel4.add(jLabel3);
        jPanel4.add(jLabel4);

        PondColorHistoS.setValue(100);
        PondColorHistoS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PondColorHistoSStateChanged(evt);
            }
        });
        jPanel4.add(PondColorHistoS);

        PondColorHistoJTF.setText("1.0");
        PondColorHistoJTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PondColorHistoJTFKeyReleased(evt);
            }
        });
        jPanel4.add(PondColorHistoJTF);

        jLabel5.setText("Pondération de la couleur positionnelle :");
        jPanel4.add(jLabel5);
        jPanel4.add(jLabel6);

        PondPosColorS.setValue(100);
        PondPosColorS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PondPosColorSStateChanged(evt);
            }
        });
        jPanel4.add(PondPosColorS);

        PondPosColorJTF.setText("1.0");
        PondPosColorJTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PondPosColorJTFKeyReleased(evt);
            }
        });
        jPanel4.add(PondPosColorJTF);

        jLabel7.setText("Pondération de la texture :");
        jPanel4.add(jLabel7);
        jPanel4.add(jLabel8);

        PondTextureS.setValue(100);
        PondTextureS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PondTextureSStateChanged(evt);
            }
        });
        jPanel4.add(PondTextureS);

        PondTextureJTF.setText("1.0");
        PondTextureJTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PondTextureJTFKeyReleased(evt);
            }
        });
        jPanel4.add(PondTextureJTF);

        jPanel2.add(jPanel4);

        javax.swing.GroupLayout ImagePersonneLayout = new javax.swing.GroupLayout(ImagePersonne);
        ImagePersonne.setLayout(ImagePersonneLayout);
        ImagePersonneLayout.setHorizontalGroup(
            ImagePersonneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 622, Short.MAX_VALUE)
        );
        ImagePersonneLayout.setVerticalGroup(
            ImagePersonneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
        );

        jPanel2.add(ImagePersonne);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PondAvgColorSStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PondAvgColorSStateChanged
        if(!this.PondAvgColorJTF.isFocusOwner())
        {
            double valeur = ((JSlider)evt.getSource()).getValue();
            this.PondAvgColorJTF.setText(""+(valeur/100));
        }
    }//GEN-LAST:event_PondAvgColorSStateChanged

    private void PondColorHistoSStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PondColorHistoSStateChanged
        if(!this.PondColorHistoJTF.isFocusOwner())
        {
            double valeur = ((JSlider)evt.getSource()).getValue();
            this.PondColorHistoJTF.setText(""+(valeur/100));
        }
    }//GEN-LAST:event_PondColorHistoSStateChanged

    private void PondPosColorSStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PondPosColorSStateChanged
        if(!this.PondPosColorJTF.isFocusOwner())
        {
            double valeur = ((JSlider)evt.getSource()).getValue();
            this.PondPosColorJTF.setText(""+(valeur/100));
        }
    }//GEN-LAST:event_PondPosColorSStateChanged

    private void PondTextureSStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PondTextureSStateChanged
        if(!this.PondTextureJTF.isFocusOwner())
        {
            double valeur = ((JSlider)evt.getSource()).getValue();
            this.PondTextureJTF.setText(""+(valeur/100));
        }
    }//GEN-LAST:event_PondTextureSStateChanged

    private void PondAvgColorJTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PondAvgColorJTFKeyReleased
        try
        {
            double valeur = Double.parseDouble(this.PondAvgColorJTF.getText());
            if(valeur>1)
                ((JTextField)evt.getSource()).setText("1.0");
            else
                this.PondAvgColorS.setValue((int)(valeur*100));
        }
        catch(NumberFormatException e)
        {
            System.out.println("Saisie non valide.");
        }
    }//GEN-LAST:event_PondAvgColorJTFKeyReleased

    private void PondColorHistoJTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PondColorHistoJTFKeyReleased
        try
        {
            double valeur = Double.parseDouble(this.PondColorHistoJTF.getText());
            if(valeur>1)
                ((JTextField)evt.getSource()).setText("1.0");
            else
                this.PondColorHistoS.setValue((int)(valeur*100));
        }
        catch(NumberFormatException e)
        {
            System.out.println("Saisie non valide.");
        }
    }//GEN-LAST:event_PondColorHistoJTFKeyReleased

    private void PondPosColorJTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PondPosColorJTFKeyReleased
        try
        {
            double valeur = Double.parseDouble(this.PondPosColorJTF.getText());
            if(valeur>1)
                ((JTextField)evt.getSource()).setText("1.0");
            else
                this.PondPosColorS.setValue((int)(valeur*100));
        }
        catch(NumberFormatException e)
        {
            System.out.println("Saisie non valide.");
        }
    }//GEN-LAST:event_PondPosColorJTFKeyReleased

    private void PondTextureJTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PondTextureJTFKeyReleased
        try
        {
            double valeur = Double.parseDouble(this.PondTextureJTF.getText());
            if(valeur>1)
                ((JTextField)evt.getSource()).setText("1.0");
            else
                this.PondTextureS.setValue((int)(valeur*100));
        }
        catch(NumberFormatException e)
        {
            System.out.println("Saisie non valide.");
        }
    }//GEN-LAST:event_PondTextureJTFKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgComparaisonImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgComparaisonImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgComparaisonImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgComparaisonImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ImagePersonne;
    private javax.swing.JPanel ImagePreuve;
    private javax.swing.JTextField PondAvgColorJTF;
    private javax.swing.JSlider PondAvgColorS;
    private javax.swing.JTextField PondColorHistoJTF;
    private javax.swing.JSlider PondColorHistoS;
    private javax.swing.JTextField PondPosColorJTF;
    private javax.swing.JSlider PondPosColorS;
    private javax.swing.JTextField PondTextureJTF;
    private javax.swing.JSlider PondTextureS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
