/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.io.IOException;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;
import oracle.ord.im.OrdAudio;
import oracle.ord.im.OrdImage;
import oracle.ord.im.OrdVideo;
import utils.ConnexionUtils;

/**
 *
 * @author Annabelle
 */
public class DlgAjoutPreuve extends javax.swing.JFrame
{
    private int idE;
    /**
     * Creates new form DlgAjoutPreuve
     */
    public DlgAjoutPreuve(int idE)
    {
        initComponents();
        this.idE = idE;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Annuler = new javax.swing.JButton();
        Ajouter = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ListeTypes = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Description = new javax.swing.JTextArea();

        jPanel1.setBackground(new java.awt.Color(226, 220, 207));
        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        Annuler.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        Annuler.setText("Annuler");
        Annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerActionPerformed(evt);
            }
        });
        jPanel1.add(Annuler);

        Ajouter.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        Ajouter.setText("Ajouter");
        Ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterActionPerformed(evt);
            }
        });
        jPanel1.add(Ajouter);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBackground(new java.awt.Color(226, 220, 207));
        jPanel2.setLayout(new java.awt.GridLayout(2, 2));

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setText("Type :");
        jPanel2.add(jLabel1);

        ListeTypes.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ListeTypes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Image", "Audio", "Vidéo" }));
        jPanel2.add(ListeTypes);

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setText("Description :");
        jPanel2.add(jLabel2);

        Description.setColumns(20);
        Description.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        Description.setRows(5);
        jScrollPane1.setViewportView(Description);

        jPanel2.add(jScrollPane1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnulerActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_AnnulerActionPerformed

    private void AjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterActionPerformed
        String description = this.Description.getText();
        if(!description.equals(""))
        {
            //Fenêtre de sélection
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Choisir une photo");
            FileNameExtensionFilter filterImage = new FileNameExtensionFilter("Images", "bmp", "jpg", "jpeg", "png");
            FileNameExtensionFilter filterAudio = new FileNameExtensionFilter("Audios", "mp3", "midi", "wav", "flac");
            FileNameExtensionFilter filterVideo = new FileNameExtensionFilter("Videos", "mp4", "avi", "mkv");
            FileNameExtensionFilter filter = null;
            switch(this.ListeTypes.getSelectedItem().toString())
            {
                case "Image" : filter = filterImage; break;
                case "Audio" : filter = filterAudio; break;
                case "Vidéo" : filter = filterVideo; break;
            }
            fileChooser.addChoosableFileFilter(filter);
            fileChooser.setAcceptAllFileFilterUsed(false);
            fileChooser.setFileFilter(filter);
            if(fileChooser.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
            {
                String chemin = fileChooser.getSelectedFile().getAbsolutePath();
                try 
                {
                    OraclePreparedStatement stmt = null;
                    OracleResultSet rs = null;
                    ConnexionUtils.getInstance().setAutoCommit(false);
                    //Récupération du media
                    switch(this.ListeTypes.getSelectedItem().toString())
                    {
                        case "Image" : 
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("SELECT MAX(id) FROM bdm_preuve_image");
                            rs = (OracleResultSet)stmt.executeQuery();
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("INSERT INTO bdm_preuve_image VALUES("
                            + "?, ?, (SELECT REF(e) FROM bdm_enquete e WHERE e.id=?), ORDSYS.ORDImage.init())");
                            break;
                        case "Audio" : 
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("SELECT MAX(id) FROM bdm_preuve_audio");
                            rs = (OracleResultSet)stmt.executeQuery();
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("INSERT INTO bdm_preuve_audio VALUES("
                            + "?, ?, (SELECT REF(e) FROM bdm_enquete e WHERE e.id=?), ORDSYS.ORDAudio.init())");
                            break;
                        case "Vidéo" : 
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("SELECT MAX(id) FROM bdm_preuve_video");
                            rs = (OracleResultSet)stmt.executeQuery();
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("INSERT INTO bdm_preuve_video VALUES("
                            + "?, ?, (SELECT REF(e) FROM bdm_enquete e WHERE e.id=?), ORDSYS.ORDVideo.init())");
                            break;
                    }
                    rs.next();
                    int idPreuve = rs.getInt(1)+1;
                    //Insertion
                    stmt.setInt(1, idPreuve);
                    stmt.setString(2, description);
                    stmt.setInt(3, this.idE);
                    stmt.executeQuery();
                    //Insertion dans le tableau de réferences
                    switch(this.ListeTypes.getSelectedItem().toString())
                    {
                        case "Image" : 
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("INSERT INTO THE (SELECT preuves FROM bdm_enquete "
                                    + "WHERE id=?) SELECT REF(p) FROM bdm_preuve_image p WHERE p.id=?");
                            break;
                        case "Audio" : 
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("INSERT INTO THE (SELECT preuves FROM bdm_enquete "
                                    + "WHERE id=?) SELECT REF(p) FROM bdm_preuve_audio p WHERE p.id=?");
                            break;
                        case "Vidéo" : 
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("INSERT INTO THE (SELECT preuves FROM bdm_enquete "
                                    + "WHERE id=?) SELECT REF(p) FROM bdm_preuve_video p WHERE p.id=?");
                            break;
                    }
                    stmt.setInt(1, this.idE);
                    stmt.setInt(2, idPreuve);
                    stmt.executeQuery();
                    Statement ps = null;
                    byte[] ctx[] = new byte [4000][1];
                    switch(this.ListeTypes.getSelectedItem().toString())
                    {
                        case "Image" : 
                            //Ajout de la photo
                            ps = (Statement)ConnexionUtils.getInstance().createStatement();
                            rs = (OracleResultSet)ps.executeQuery("SELECT image FROM bdm_preuve_image WHERE id="+idPreuve+" FOR UPDATE");
                            rs.next();
                            OrdImage imgObj = (OrdImage)rs.getORAData(1, OrdImage.getORADataFactory());
                            imgObj.loadDataFromFile(chemin);
                            imgObj.setProperties();
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("UPDATE bdm_preuve_image SET image=? WHERE id=?");
                            stmt.setORAData(1, imgObj);
                            stmt.setInt(2, idPreuve);
                            stmt.execute();
                            break;
                        case "Audio" : 
                            //Ajout de la photo
                            ps = (Statement)ConnexionUtils.getInstance().createStatement();
                            rs = (OracleResultSet)ps.executeQuery("SELECT audio FROM bdm_preuve_audio WHERE id="+idPreuve+" FOR UPDATE");
                            rs.next();
                            OrdAudio audObj = (OrdAudio)rs.getORAData(1, OrdAudio.getORADataFactory());
                            audObj.loadDataFromFile(chemin);
                            audObj.setProperties(ctx);
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("UPDATE bdm_preuve_audio SET audio=? WHERE id=?");
                            stmt.setORAData(1, audObj);
                            stmt.setInt(2, idPreuve);
                            stmt.execute();
                            break;
                        case "Vidéo" : 
                            //Ajout de la photo
                            ps = (Statement)ConnexionUtils.getInstance().createStatement();
                            rs = (OracleResultSet)ps.executeQuery("SELECT video FROM bdm_preuve_video WHERE id="+idPreuve+" FOR UPDATE");
                            rs.next();
                            OrdVideo vidObj = (OrdVideo)rs.getORAData(1, OrdVideo.getORADataFactory());
                            vidObj.loadDataFromFile(chemin);
                            vidObj.setProperties(ctx);
                            stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("UPDATE bdm_preuve_video SET video=? WHERE id=?");
                            stmt.setORAData(1, vidObj);
                            stmt.setInt(2, idPreuve);
                            stmt.execute();
                            break;
                    }
                    ConnexionUtils.getInstance().commit();
                    ps.close();
                    rs.close();
                    stmt.close();
                    ConnexionUtils.getInstance().setAutoCommit(true);
                    this.setVisible(false);
                } 
                catch (SQLException | IOException ex) 
                {
                    Logger.getLogger(DlgAjoutPreuve.class.getName()).log(Level.SEVERE, null, ex);
                } 
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Une description doit être fournie.", "Erreur lors de l'ajout", JOptionPane.INFORMATION_MESSAGE, null);
    }//GEN-LAST:event_AjouterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(DlgAjoutPreuve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(DlgAjoutPreuve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(DlgAjoutPreuve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(DlgAjoutPreuve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ajouter;
    private javax.swing.JButton Annuler;
    private javax.swing.JTextArea Description;
    private javax.swing.JComboBox<String> ListeTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
