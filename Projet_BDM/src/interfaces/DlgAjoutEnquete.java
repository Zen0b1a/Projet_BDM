/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.Font;
import java.awt.GridLayout;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;
import utils.ConnexionUtils;

/**
 *
 * @author Annabelle
 */
public class DlgAjoutEnquete extends javax.swing.JFrame
{
    private List<String> enqueteurs; //Format : id - Nom Prenom
    
    /**
     * Creates new form DlgAjoutEnquete
     */
    public DlgAjoutEnquete()
    {
        initComponents();
        this.enqueteurs = new ArrayList<>();
        this.initialisationCbEnqueteurs();
    }

    private void remplirPanelEnqueteurs()
    {
        String id;
        String nom;
        String[] split;
        Font fonte = new Font("Courier",Font.PLAIN,14);
        this.Enqueteurs.removeAll();
        this.Enqueteurs.setLayout(new GridLayout(this.enqueteurs.size(), 2));
        for(int i=0; i<this.enqueteurs.size(); i++)
        {
            //Récupération de l'id et du nom/prénom
            split = this.enqueteurs.get(i).split(" - ");
            id = split[0];
            nom = split[1];
            //Ajout des informations dans le panel
            JLabel jl = new JLabel();
            jl.setText(id+" - "+nom);
            JButton jb = new JButton();
            jb.setFont(fonte);
            jb.setText("Supprimer cet enquêteur.");
            jb.setName(this.enqueteurs.get(i));
            //Ajout du listener
            jb.addActionListener(new java.awt.event.ActionListener() 
            {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    supprimerEnqueteur(evt);
                }
            });
            this.Enqueteurs.add(jl);
            this.Enqueteurs.add(jb);
        }
        this.setSize(this.getWidth()+1, this.getHeight()+1);
        this.setSize(this.getWidth()-1, this.getHeight()-1);
    }
    
    private void initialisationCbEnqueteurs()
    {
        try 
        {
            //Remplissage de la combobox
            OraclePreparedStatement stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("SELECT id, nom, prenom FROM bdm_enqueteur ORDER BY id");
            OracleResultSet rs = (OracleResultSet)stmt.executeQuery();
            int idEnqueteur;
            String nomEnqueteur;
            String prenomEnqueteur;
            this.ListeEnqueteurs.removeAllItems();
            this.ListeEnqueteurs.setSelectedIndex(-1);
            while(rs.next())
            {
                idEnqueteur = rs.getInt("ID");
                nomEnqueteur = rs.getString("NOM");
                prenomEnqueteur = rs.getString("PRENOM");
                if(!this.enqueteurs.contains(idEnqueteur+" - "+nomEnqueteur+" "+prenomEnqueteur))
                    this.ListeEnqueteurs.addItem(idEnqueteur+" - "+nomEnqueteur+" "+prenomEnqueteur);
            }
            rs.close();
            stmt.close();
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(DlgAjoutEnquete.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void supprimerEnqueteur(java.awt.event.ActionEvent evt)
    {
        JButton jb = (JButton)evt.getSource();
        String enqueteur = jb.getName();
        this.enqueteurs.remove(enqueteur);
        this.ListeEnqueteurs.addItem(enqueteur);
        this.remplirPanelEnqueteurs();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Annuler = new javax.swing.JButton();
        Ajouter = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Nom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Enqueteurs = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        ListeEnqueteurs = new javax.swing.JComboBox();
        AjoutEnqueteur = new javax.swing.JButton();

        setTitle("Ajout d'une enquête");

        jPanel1.setBackground(new java.awt.Color(226, 220, 207));
        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        Annuler.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        Annuler.setText("Annuler");
        Annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerActionPerformed(evt);
            }
        });
        jPanel1.add(Annuler);

        Ajouter.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        Ajouter.setText("Ajouter");
        Ajouter.setPreferredSize(new java.awt.Dimension(109, 40));
        Ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterActionPerformed(evt);
            }
        });
        jPanel1.add(Ajouter);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBackground(new java.awt.Color(226, 220, 207));
        jPanel2.setLayout(new java.awt.GridLayout(4, 1));

        jPanel3.setBackground(new java.awt.Color(226, 220, 207));
        jPanel3.setLayout(new java.awt.GridLayout(1, 2));

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setText("Nom :");
        jLabel1.setPreferredSize(new java.awt.Dimension(300, 21));
        jPanel3.add(jLabel1);

        Nom.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jPanel3.add(Nom);

        jPanel2.add(jPanel3);

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setText("Enqueteurs :");
        jLabel2.setPreferredSize(new java.awt.Dimension(200, 21));
        jPanel2.add(jLabel2);

        Enqueteurs.setBackground(new java.awt.Color(226, 220, 207));

        javax.swing.GroupLayout EnqueteursLayout = new javax.swing.GroupLayout(Enqueteurs);
        Enqueteurs.setLayout(EnqueteursLayout);
        EnqueteursLayout.setHorizontalGroup(
            EnqueteursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 442, Short.MAX_VALUE)
        );
        EnqueteursLayout.setVerticalGroup(
            EnqueteursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );

        jPanel2.add(Enqueteurs);

        jPanel4.setLayout(new java.awt.GridLayout(1, 2));

        ListeEnqueteurs.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ListeEnqueteurs.setPreferredSize(new java.awt.Dimension(150, 27));
        jPanel4.add(ListeEnqueteurs);

        AjoutEnqueteur.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        AjoutEnqueteur.setText("Ajouter enquêteur");
        AjoutEnqueteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutEnqueteurActionPerformed(evt);
            }
        });
        jPanel4.add(AjoutEnqueteur);

        jPanel2.add(jPanel4);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AnnulerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_AnnulerActionPerformed
    {//GEN-HEADEREND:event_AnnulerActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_AnnulerActionPerformed

    private void AjouterActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_AjouterActionPerformed
    {//GEN-HEADEREND:event_AjouterActionPerformed
        String nomEnquete = this.Nom.getText();
        JOptionPane jop = new JOptionPane();
        boolean valide = true;
        String message = "Erreur lors de l'ajout de l'enquête : ";
        if(nomEnquete.length()>50)
        {
            valide = false;
            message += "\nLe nom de l'enquête doit contenir moins de 50 caractères";
        }
        if(nomEnquete.length()<=0)
        {
            valide = false;
            message += "\nLe nom de l'enquête ne peut pas être vide";
        }
        if(this.enqueteurs.size()<=0)
        {
            valide = false;
            message += "\nIl faut sélectionner au moins un enquêteur";
        }
        if(valide)
        {
            try
            {
                //Récupération de l'id
                OraclePreparedStatement stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("SELECT MAX(id) FROM bdm_enquete");
                OracleResultSet rs = (OracleResultSet)stmt.executeQuery();
                rs.next();
                int id = rs.getInt(1)+1;
                rs.close();
                //Insertion
                stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("INSERT INTO bdm_enquete VALUES(?, ?, 'en-cours', "
                + "bdm_crimes_type(), bdm_preuves_type())");
                stmt.setInt(1, id);
                stmt.setString(2, nomEnquete);
                stmt.executeQuery();
                //Ajout dans EnqueteurEnqueteint 
                int idEnqueteur;
                for(int i=0; i<this.enqueteurs.size(); i++)
                {
                    idEnqueteur = Integer.parseInt(this.enqueteurs.get(i).split(" - ")[0]);
                    stmt = (OraclePreparedStatement)ConnexionUtils.getInstance().prepareStatement("INSERT INTO bdm_enqueteur_enquete VALUES"
                            + "((SELECT REF(e) FROM bdm_enqueteur e WHERE e.id=?), (SELECT REF(e) FROM bdm_enquete e WHERE e.id=?))");
                    stmt.setInt(1, idEnqueteur);
                    stmt.setInt(2, id);
                    stmt.executeQuery();
                }
                stmt.close();
                System.out.println("Enquête ajoutée.");
                this.setVisible(false);
            } 
            catch (SQLException ex)
            {
                Logger.getLogger(DlgAjoutEnquete.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
            jop.showMessageDialog(null, message, "Erreur lors de l'ajout", JOptionPane.INFORMATION_MESSAGE, null);
    }//GEN-LAST:event_AjouterActionPerformed

    private void AjoutEnqueteurActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_AjoutEnqueteurActionPerformed
    {//GEN-HEADEREND:event_AjoutEnqueteurActionPerformed
        String enqueteur = this.ListeEnqueteurs.getSelectedItem().toString();
        this.enqueteurs.add(enqueteur);
        this.ListeEnqueteurs.removeItem(enqueteur);
        this.remplirPanelEnqueteurs();
    }//GEN-LAST:event_AjoutEnqueteurActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(DlgAjoutEnquete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(DlgAjoutEnquete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(DlgAjoutEnquete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(DlgAjoutEnquete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new DlgAjoutEnquete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AjoutEnqueteur;
    private javax.swing.JButton Ajouter;
    private javax.swing.JButton Annuler;
    private javax.swing.JPanel Enqueteurs;
    private javax.swing.JComboBox ListeEnqueteurs;
    private javax.swing.JTextField Nom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
